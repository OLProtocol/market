"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/bigint-crypto-utils";
exports.ids = ["vendor-chunks/bigint-crypto-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/bigint-crypto-utils/dist/index.node.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bigint-crypto-utils/dist/index.node.esm.js ***!
  \*****************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abs: () => (/* binding */ t),\n/* harmony export */   bitLength: () => (/* binding */ e),\n/* harmony export */   crt: () => (/* binding */ u),\n/* harmony export */   eGcd: () => (/* binding */ r),\n/* harmony export */   gcd: () => (/* binding */ s),\n/* harmony export */   isProbablyPrime: () => (/* binding */ v),\n/* harmony export */   lcm: () => (/* binding */ a),\n/* harmony export */   max: () => (/* binding */ c),\n/* harmony export */   min: () => (/* binding */ f),\n/* harmony export */   modAdd: () => (/* binding */ g),\n/* harmony export */   modInv: () => (/* binding */ i),\n/* harmony export */   modMultiply: () => (/* binding */ m),\n/* harmony export */   modPow: () => (/* binding */ d),\n/* harmony export */   phi: () => (/* binding */ h),\n/* harmony export */   prime: () => (/* binding */ S),\n/* harmony export */   primeSync: () => (/* binding */ P),\n/* harmony export */   randBetween: () => (/* binding */ I),\n/* harmony export */   randBits: () => (/* binding */ y),\n/* harmony export */   randBitsSync: () => (/* binding */ B),\n/* harmony export */   randBytes: () => (/* binding */ p),\n/* harmony export */   randBytesSync: () => (/* binding */ w),\n/* harmony export */   toZn: () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\nfunction t(n){return n>=0?n:-n}function e(n){if(\"number\"==typeof n&&(n=BigInt(n)),1n===n)return 1;let t=1;do{t++}while((n>>=1n)>1n);return t}function r(n,t){if(\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof t&&(t=BigInt(t)),n<=0n||t<=0n)throw new RangeError(\"a and b MUST be > 0\");let e=0n,r=1n,o=1n,i=0n;for(;0n!==n;){const u=t/n,s=t%n,a=e-o*u,c=r-i*u;t=n,n=s,e=o,r=i,o=a,i=c}return{g:t,x:e,y:r}}function o(n,t){if(\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof t&&(t=BigInt(t)),t<=0n)throw new RangeError(\"n must be > 0\");const e=n%t;return e<0n?e+t:e}function i(n,t){const e=r(o(n,t),t);if(1n!==e.g)throw new RangeError(`${n.toString()} does not have inverse modulo ${t.toString()}`);return o(e.x,t)}function u(n,t,e){if(n.length!==t.length)throw new RangeError(\"The remainders and modulos arrays should have the same length\");const r=e??t.reduce(((n,t)=>n*t),1n);return t.reduce(((t,e,u)=>{const s=r/e;return o(t+s*i(s,e)%r*n[u]%r,r)}),0n)}function s(n,e){let r=\"number\"==typeof n?BigInt(t(n)):t(n),o=\"number\"==typeof e?BigInt(t(e)):t(e);if(0n===r)return o;if(0n===o)return r;let i=0n;for(;0n===(1n&(r|o));)r>>=1n,o>>=1n,i++;for(;0n===(1n&r);)r>>=1n;do{for(;0n===(1n&o);)o>>=1n;if(r>o){const n=r;r=o,o=n}o-=r}while(0n!==o);return r<<i}function a(n,e){return\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof e&&(e=BigInt(e)),0n===n&&0n===e?BigInt(0):t(n/s(n,e)*e)}function c(n,t){return n>=t?n:t}function f(n,t){return n>=t?t:n}function g(n,t){const e=BigInt(t);return o(n.map((n=>BigInt(n)%e)).reduce(((n,t)=>n+t%e),0n),e)}function m(n,t){const e=BigInt(t);return o(n.map((n=>BigInt(n)%e)).reduce(((n,t)=>n*t%e),1n),e)}function h(n){return n.map((n=>n[0]**(n[1]-1n)*(n[0]-1n))).reduce(((n,t)=>t*n),1n)}function d(n,e,r,s){if(\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof e&&(e=BigInt(e)),\"number\"==typeof r&&(r=BigInt(r)),r<=0n)throw new RangeError(\"n must be > 0\");if(1n===r)return 0n;if(n=o(n,r),e<0n)return i(d(n,t(e),r,s),r);if(void 0!==s)return function(n,t,e,r){const o=r.map((n=>n[0]**n[1])),i=r.map((n=>h([n]))),s=i.map(((e,r)=>d(n,t%e,o[r])));return u(s,o,e)}(n,e,r,function(n){const t={};return n.forEach((n=>{if(\"bigint\"==typeof n||\"number\"==typeof n){const e=String(n);void 0===t[e]?t[e]={p:BigInt(n),k:1n}:t[e].k+=1n}else{const e=String(n[0]);void 0===t[e]?t[e]={p:BigInt(n[0]),k:BigInt(n[1])}:t[e].k+=BigInt(n[1])}})),Object.values(t).map((n=>[n.p,n.k]))}(s));let a=1n;for(;e>0;)e%2n===1n&&(a=a*n%r),e/=2n,n=n**2n%r;return a}function l(n){let t=0n;for(const e of n.values()){t=(t<<8n)+BigInt(e)}return t}var b=await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 19));function p(n,t=!1){if(n<1)throw new RangeError(\"byteLength MUST be > 0\");return new Promise((function(e,r){b.randomBytes(n,(function(n,o){null!==n&&r(n),t&&(o[0]=128|o[0]),e(o)}))}))}function w(n,t=!1){if(n<1)throw new RangeError(\"byteLength MUST be > 0\");{const e=b.randomBytes(n);return t&&(e[0]=128|e[0]),e}}function y(n,t=!1){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");const e=Math.ceil(n/8),r=n%8;return new Promise(((n,o)=>{p(e,!1).then((function(e){if(0!==r&&(e[0]=e[0]&2**r-1),t){const n=0!==r?2**(r-1):128;e[0]=e[0]|n}n(e)}))}))}function B(n,t=!1){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");const e=w(Math.ceil(n/8),!1),r=n%8;if(0!==r&&(e[0]=e[0]&2**r-1),t){const n=0!==r?2**(r-1):128;e[0]=e[0]|n}return e}function I(n,t=1n){if(n<=t)throw new RangeError(\"Arguments MUST be: max > min\");const r=n-t,o=e(r);let i;do{i=l(B(o))}while(i>r);return i+t}let _=!1;try{await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! worker_threads */ \"worker_threads\", 19)),_=!0}catch(o){console.log(\"[bigint-crypto-utils] WARNING:\\nThis node version doesn't support worker_threads. You should enable them in order to greatly speedup the generation of big prime numbers.\\n  · With Node >=11 it is enabled by default (consider upgrading).\\n  · With Node 10, starting with 10.5.0, you can enable worker_threads at runtime executing node --experimental-worker \")}function v(t,e=16,r=!1){if(\"number\"==typeof t&&(t=BigInt(t)),t<0n)throw RangeError(\"w MUST be >= 0\");return new Promise(!r&&_?(r,o)=>{const i=new E.Worker((0,url__WEBPACK_IMPORTED_MODULE_0__.fileURLToPath)(\"file:///Users/icehugh/workspace/jieziyuan/client/market/node_modules/bigint-crypto-utils/dist/index.node.esm.js\"));i.on(\"message\",(n=>{void 0!==n?._bcu?.isPrime&&(i.terminate().catch(o),r(n._bcu.isPrime))})),i.on(\"error\",o);const u={_bcu:{rnd:t,iterations:e,id:0}};i.postMessage(u)}:n=>{n(M(t,e))})}function M(n,t){if(2n===n)return!0;if(0n===(1n&n)||1n===n)return!1;const e=[3n,5n,7n,11n,13n,17n,19n,23n,29n,31n,37n,41n,43n,47n,53n,59n,61n,67n,71n,73n,79n,83n,89n,97n,101n,103n,107n,109n,113n,127n,131n,137n,139n,149n,151n,157n,163n,167n,173n,179n,181n,191n,193n,197n,199n,211n,223n,227n,229n,233n,239n,241n,251n,257n,263n,269n,271n,277n,281n,283n,293n,307n,311n,313n,317n,331n,337n,347n,349n,353n,359n,367n,373n,379n,383n,389n,397n,401n,409n,419n,421n,431n,433n,439n,443n,449n,457n,461n,463n,467n,479n,487n,491n,499n,503n,509n,521n,523n,541n,547n,557n,563n,569n,571n,577n,587n,593n,599n,601n,607n,613n,617n,619n,631n,641n,643n,647n,653n,659n,661n,673n,677n,683n,691n,701n,709n,719n,727n,733n,739n,743n,751n,757n,761n,769n,773n,787n,797n,809n,811n,821n,823n,827n,829n,839n,853n,857n,859n,863n,877n,881n,883n,887n,907n,911n,919n,929n,937n,941n,947n,953n,967n,971n,977n,983n,991n,997n,1009n,1013n,1019n,1021n,1031n,1033n,1039n,1049n,1051n,1061n,1063n,1069n,1087n,1091n,1093n,1097n,1103n,1109n,1117n,1123n,1129n,1151n,1153n,1163n,1171n,1181n,1187n,1193n,1201n,1213n,1217n,1223n,1229n,1231n,1237n,1249n,1259n,1277n,1279n,1283n,1289n,1291n,1297n,1301n,1303n,1307n,1319n,1321n,1327n,1361n,1367n,1373n,1381n,1399n,1409n,1423n,1427n,1429n,1433n,1439n,1447n,1451n,1453n,1459n,1471n,1481n,1483n,1487n,1489n,1493n,1499n,1511n,1523n,1531n,1543n,1549n,1553n,1559n,1567n,1571n,1579n,1583n,1597n];for(let t=0;t<e.length&&e[t]<=n;t++){const r=e[t];if(n===r)return!0;if(n%r===0n)return!1}let r=0n;const o=n-1n;let i=o;for(;i%2n===0n;)i/=2n,++r;const u=o/2n**r;do{let t=d(I(o,2n),u,n);if(1n===t||t===o)continue;let e=1;for(;e<r&&(t=d(t,2n,n),t!==o);){if(1n===t)return!1;e++}if(t!==o)return!1}while(0!=--t);return!0}if(_)try{var E=await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! worker_threads */ \"worker_threads\", 19));if(!E.isMainThread&&null!==E.parentPort){const n=E.parentPort;n.on(\"message\",(function(t){if(void 0!==t?._bcu?.iterations&&void 0!==t?._bcu?.rnd){const e={_bcu:{isPrime:M(t._bcu.rnd,t._bcu.iterations),value:t._bcu.rnd,id:t._bcu.id}};n.postMessage(e)}}))}}catch(n){}var R=await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! os */ \"os\", 19));try{var k=await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! worker_threads */ \"worker_threads\", 19))}catch{}function S(t,e=16){if(t<1)throw new RangeError(\"bitLength MUST be > 0\");if(!_){let n=0n;do{n=l(B(t,!0))}while(!M(n,e));return new Promise((t=>{t(n)}))}return new Promise(((r,o)=>{const i=[],u=(n,o)=>{if(n._bcu.isPrime){for(let n=0;n<i.length;n++)i[n].terminate();for(;i.length>0;)i.pop();r(n._bcu.value)}else{const r=l(B(t,!0));try{const t={_bcu:{rnd:r,iterations:e,id:n._bcu.id}};o.postMessage(t)}catch(n){}}};for(let t=0;t<R.cpus().length-1;t++){const t=new k.Worker((0,url__WEBPACK_IMPORTED_MODULE_0__.fileURLToPath)(\"file:///Users/icehugh/workspace/jieziyuan/client/market/node_modules/bigint-crypto-utils/dist/index.node.esm.js\"));t.on(\"message\",(n=>u(n,t))),i.push(t)}for(let n=0;n<i.length;n++)y(t,!0).then((function(t){const r=l(t);i[n].postMessage({_bcu:{rnd:r,iterations:e,id:n}})})).catch(o)}))}function P(n,t=16){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");let e=0n;do{e=l(B(n,!0))}while(!M(e,t));return e}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/bigint-crypto-utils/dist/index.node.esm.js\n");

/***/ })

};
;